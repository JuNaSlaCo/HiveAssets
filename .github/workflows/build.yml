name: Build & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (format vX.Y.Z)'
        required: true
      release_notes:
        description: 'Description de la version'
        required: false
      is_prerelease:
        description: 'Est-ce une pre-release ? (true/false)'
        required: false
        default: 'false'

jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest commit from main
        uses: actions/checkout@v4
        with:
            ref: main

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update package.json
        run: |
          VERSION=${{ github.event.inputs.version }}
          VERSION_STRIPPED=${VERSION#v}
          jq ".version = \"$VERSION_STRIPPED\"" package.json > tmp.$$.json && mv tmp.$$.json package.json
          git add package.json
          git commit -m "Bump version to $VERSION"
          git tag "$VERSION"
          git push origin HEAD
          git push origin "$VERSION"

  build:
    needs: versioning
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout latest commit from main
        uses: actions/checkout@v4
        with:
            ref: main

      - name: Setup Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install npm dependencies
        run: npm install

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install PyInstaller
        run: |
          cd bottle_server
          pip install -r requirements.txt

      - name: Build Python server
        run: python scripts/build_server.py
        shell: bash

      - name: Copy correct binary before Electron build
        run: npm run prebuild

      - name: Build Electron App
        run: npm run publish

  finalize_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Make draft release public with description
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.release_notes }}
          draft: false
          prerelease: ${{ github.event.inputs.is_prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}