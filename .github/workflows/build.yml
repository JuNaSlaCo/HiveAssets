name: Build & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (format vX.Y.Z)'
        required: true

jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update package.json
        run: |
          VERSION=${{ github.event.inputs.version }}
          VERSION_STRIPPED=${VERSION#v}
          jq ".version = \"$VERSION_STRIPPED\"" package.json > tmp.$$.json && mv tmp.$$.json package.json
          git add package.json
          git commit -m "chore: bump version to $VERSION"
          git tag "$VERSION"
          git push origin HEAD
          git push origin "$VERSION"

  build:
    needs: versioning
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update package.json version
        run: |
         VERSION=${{ github.event.inputs.version }}
          VERSION_STRIPPED=${VERSION#v}
          echo "Updating package.json version to $VERSION_STRIPPED"
          jq ".version = \"$VERSION_STRIPPED\"" package.json > tmp.$$.json && mv tmp.$$.json package.json

      - name: Commit updated package.json
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"

      - name: Create tag from input version
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install npm dependencies
        run: npm install

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Python server
        run: |
          cd bottle_server
          python scripts/build_server.py
        shell: bash

      - name: Copy correct binary before Electron build
        run: npm run prebuild

      - name: Build Electron App
        run: npm run publish

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          generate_release_notes: true
